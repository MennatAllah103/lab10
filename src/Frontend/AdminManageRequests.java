/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.Group;
import static Backend.GroupDataBase.groupDB;
import Backend.GroupManagement;
import Backend.GroupRequestDatabase;
import Backend.GroupRequests;
import Backend.PostDataBase;
import Backend.User;
import Backend.UserDataBase;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class AdminManageRequests extends javax.swing.JFrame {
      ViewMyGroups viewG;
    Group group;
    UserDataBase userDB = UserDataBase.getDatabase();
    GroupManagement groupmanage = new GroupManagement();
    User user = userDB.getCurrentUser();
    PostDataBase postDB=PostDataBase.getInstance();
    GroupRequestDatabase requestDB=GroupRequestDatabase.getinstance();
    /**
     * Creates new form AdminManageRequests
     */
    public AdminManageRequests(Group group,AdminFrame frame) {
        initComponents();
        this.group = group;
         viewG=frame.viewG;
         loadRequests();
    }

    public void loadRequests() {
    DefaultListModel<String> requestListModel = new DefaultListModel<>();

    for (GroupRequests request : requestDB.getALLRequests()) {
        String memberId = request.getMemberId();
        String groupId = request.getGroupId();
        
        User member = userDB.getUserById(memberId);
        Group group = groupDB.getGroupById(groupId);
        
        if (member != null && group != null) {
            String requestInfo = "Request from " + member.getUsername() + " to join group " + group.getGroupName();
            requestListModel.addElement(requestInfo);
        }
    }

    requestList.setModel(requestListModel);
}

    
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        accept = new javax.swing.JButton();
        decline = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(requestList);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Requests");

        accept.setText("Accept");
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        decline.setText("Decline");
        decline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(accept)
                        .addGap(39, 39, 39)
                        .addComponent(decline)
                        .addGap(31, 31, 31)
                        .addComponent(back)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accept)
                    .addComponent(decline)
                    .addComponent(back))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        // TODO add your handling code here:
        int index = requestList.getSelectedIndex();

if (index > -1) { 
    
    String selectedRequestInfo = requestList.getSelectedValue();
    
   
    GroupRequests requestToProcess = null;
    for (GroupRequests request : requestDB.getALLRequests()) {
        String memberId = request.getMemberId();
        String groupId = request.getGroupId();

        User member = userDB.getUserById(memberId);
        Group group = groupDB.getGroupById(groupId);

        if (member != null && group != null) {
            String requestInfo = "Request from " + member.getUsername() + " to join group " + group.getGroupName();
            
           
            if (requestInfo.equals(selectedRequestInfo)) {
                requestToProcess = request;
                break;
            }
        }
    }

   
    if (requestToProcess != null) {
      
        groupmanage.acceptrequest(requestToProcess);
        
        
        loadRequests();
        
        JOptionPane.showMessageDialog(this, "Request accepted successfully.");
    } else {
        JOptionPane.showMessageDialog(this, "Request not found.");
    }
} else {
    JOptionPane.showMessageDialog(this, "Please select a request to accept.");
}

        
        
        
        
    }//GEN-LAST:event_acceptActionPerformed

    private void declineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineActionPerformed
        // TODO add your handling code here:
        int index = requestList.getSelectedIndex();

    if (index > -1) { 
        
        String selectedRequestInfo = requestList.getSelectedValue();
        
        GroupRequests requestToProcess = null;
        for (GroupRequests request : requestDB.getALLRequests()) {
            String memberId = request.getMemberId();
            String groupId = request.getGroupId();

            User member = userDB.getUserById(memberId);
            Group group = groupDB.getGroupById(groupId);

            if (member != null && group != null) {
                String requestInfo = "Request from " + member.getUsername() + " to join group " + group.getGroupName();
                
                if (requestInfo.equals(selectedRequestInfo)) {
                    requestToProcess = request;
                    break;
                }
            }
        }

        if (requestToProcess != null) {
            
            groupmanage.Declinerequest(requestToProcess);
            
        
           
            loadRequests(); 
            
            JOptionPane.showMessageDialog(this, "Request declined successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Request not found.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a request to decline.");
    }
        
        
    }//GEN-LAST:event_declineActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        viewG.setVisible(true);
        
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JButton back;
    private javax.swing.JButton decline;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> requestList;
    // End of variables declaration//GEN-END:variables
}
