/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.Group;
import Backend.GroupManagement;
import Backend.Post;
import Backend.PostDataBase;
import Backend.User;
import Backend.UserDataBase;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author daree
 */
public class AdminManagePosts extends javax.swing.JFrame {
    ViewMyGroups viewG;
    Group group;
    UserDataBase userDB = UserDataBase.getDatabase();
    GroupManagement groupmanage = new GroupManagement();
    User user = userDB.getCurrentUser();
    PostDataBase postDB=PostDataBase.getInstance();
    
    /**
     * Creates new form AdminManagePosts
     */
    public AdminManagePosts(Group group,AdminFrame frame) {
        initComponents();
         this.group = group;
         loadPosts();
         viewG=frame.viewG;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   public void loadPosts() {
   
    ArrayList<String> postIDs = group.getPostIDs();
    
    
    DefaultListModel<String> postListModel = new DefaultListModel<>();

 
    for (String postID : postIDs) {
       
        Post post = postDB.GetPostById(postID);
        
        
        if (post != null) {
            User author=userDB.getUserById(post.getAuthorID());
            String authorName=author.getUsername();
            postListModel.addElement(post.getContent());
        }
    }

   
    postList.setModel(postListModel);
}

    
   
    
    
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        postList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        editpost = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("post");

        jScrollPane1.setViewportView(postList);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Posts:");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        editpost.setText("Edit post");
        editpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editpostActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(editpost)
                        .addGap(28, 28, 28)
                        .addComponent(back)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(editpost)
                    .addComponent(back))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int index= postList.getSelectedIndex();
        
        if(index>-1)
     {
     
        // Get the content of the selected post from the list
        String selectedContent = postList.getSelectedValue();
        
        // Find the corresponding post ID for the selected content
        Post postToDelete = null;
        for (String postID : group.getPostIDs()) {
            Post post = postDB.GetPostById(postID);
            if (post != null && post.getContent().equals(selectedContent)) {
                postToDelete = post;
                break;
            }
        }

       
        if (postToDelete != null) {
         
            postDB.deletePost(postToDelete); 
            
      
            groupmanage.deletePostFromGroup(postToDelete.getContentID(),group.getGroupName()); 
            loadPosts();
        } else {
            JOptionPane.showMessageDialog(this, "Post not found.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a post to delete.");
    }
        
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void editpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editpostActionPerformed
        // TODO add your handling code here:
   
         
  int index= postList.getSelectedIndex();
        
        if(index>-1)
     {
     
        // Get the content of the selected post from the list
        String selectedContent = postList.getSelectedValue();
        
        // Find the corresponding post ID for the selected content
        Post postToEdit = null;
        for (String postID : group.getPostIDs()) {
            Post post = postDB.GetPostById(postID);
            if (post != null && post.getContent().equals(selectedContent)) {
                postToEdit = post;
                break;
            }
        }

        
        if (postToEdit != null) {
          
            AdminEditPost edit = new AdminEditPost(this, postToEdit);
            edit.setVisible(true);
           
        } else {
            JOptionPane.showMessageDialog(this, "Post not found.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a post to edit.");
    }  
        
        
    }//GEN-LAST:event_editpostActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        viewG.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JButton editpost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> postList;
    // End of variables declaration//GEN-END:variables
}
